server.port = 9999
server.servlet.context-path = /TradingMarket
spring.main.allow-bean-definition-overriding=true

# log config
logging.config = classpath:logback.xml

spring.datasource.url = jdbc:mysql://localhost:3306/trading_market?useUnicode=true&characterEncoding=utf8&allowMultiQueries=true&zeroDateTimeBehavior=convertToNull&autoReconnect=true&serverTimezone=Asia/Shanghai
spring.datasource.username = 你的数据库账号
spring.datasource.password = 你的数据库密码
spring.datasource.driverClassName = com.mysql.cj.jdbc.Driver
spring.datasource.type = com.alibaba.druid.pool.DruidDataSource
spring.datasource.maxActive = 300
spring.datasource.initialSize = 30
spring.datasource.minIdle = 30
# 配置获取连接等待超时的时间
spring.datasource.maxWait = 10000
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.timeBetweenEvictionRunsMillis = 60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.minEvictableIdleTimeMillis = 300000
spring.datasource.validationQuery = select 'x'
spring.datasource.testWhileIdle = true
spring.datasource.testOnBorrow = false
spring.datasource.testOnReturn = false
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.poolPreparedStatements = true
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.maxOpenPreparedStatements = 20
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.filters = stat,wall,slf4j
spring.datasource.druid.url = /druid/*

## 添加mapper配置 多个接口时逗号隔开
mapper.not-empty = false
mapper.identity = MYSQL
mapper.mappers = tk.mybatis.mapper.common.Mapper
## Mybatis 配置
mybatis.typeAliasesPackage = top.hhduan.market.mapper
mybatis.mapperLocations = classpath*:mapper/**/*.xml
# 经典数据库命名 自动映射成 驼峰命名
mybatis.configuration.mapUnderscoreToCamelCase = true

# pagehelper
pagehelper.helperDialect = mysql
pagehelper.reasonable = true
pagehelper.supportMethodsArguments = true
pagehelper.params = count=countSql

# redis配置
spring.redis.database = 0
spring.redis.host = 127.0.0.1
spring.redis.port = 6379
spring.redis.password = 你的Redis密码
#最大连接数
spring.redis.jedis.pool.max-active = 100
#最大阻塞等待时间(负数表示没限制)
spring.redis.jedis.pool.max-wait = 2000
#最大空闲
spring.redis.jedis.pool.max-idle = 500
#最小空闲
spring.redis.jedis.pool.min-idle = 8
#连接超时时间
spring.redis.timeout = 5000

#RABBITMQ配置
##指定client连接到的server的地址，多个以逗号分隔(项目中使用此属性)
spring.rabbitmq.address = 127.0.0.1:5672
##指定RabbitMQ host.默认为: localhost)(项目中暂未使用此属性)
spring.rabbitmq.host = 127.0.0.1
##端口(项目中暂未使用此属性)
spring.rabbitmq.port = 5672
spring.rabbitmq.virtualHost = /market-host
##用户名
spring.rabbitmq.username = admin
##密码
spring.rabbitmq.password = 等会配置
##指定最大的消费者数量
spring.rabbitmq.maxConcurrentConsumers = 5
##指定最小的消费者数量
spring.rabbitmq.concurrentConsumers = 1
##设置超时时间
spring.rabbitmq.connection-timeout = 5000
##手动确认
spring.rabbitmq.listener.simple.acknowledge-mode=manual
##订单队列延时时间 本地2分钟
spring.rabbitmq.order.ttl=120000

#oss上传 test
endPoint = http://oss-cn-beijing.aliyuncs.com
accessKeyId = 你的阿里云oss密钥id
accessKeySecret = 你的阿里云oss密钥
bucketName = 你的阿里云ossBucket名称
ossUrl = http://hhduan.oss-cn-beijing.aliyuncs.com
